{"version":3,"sources":["controller/grid/AbstractGridController.ts"],"names":[],"mappings":"AAAA;;GAEG;;;IAOH;QASI,8DAA8D;QAC9D,0DAA0D;QAE1D,gCAAY,kBAAuB,EAAE,UAAe;YALpD,UAAK,GAAgB,EAAE,CAAC;YAYxB;;eAEG;YACH,WAAM,GAAc;gBAChB,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC7C,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC9D,CAAC,CAAC;YAEF,YAAY;YACZ,SAAI,GAAc;gBACd,IAAI,EAAE,GAAE,IAAI,CAAC;gBACb,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,UAAS,KAAK;oBAChD,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,IAAI,EAAE,KAAK;wBACxC,IAAI,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;wBAC7B,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;wBACpB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;wBACxB,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;wBACtB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;wBAC1B,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;wBACxB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;wBAElC,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;wBACzB,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;wBAE5B,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC1B,CAAC,CAAC,CAAA;oBACF,EAAE,CAAC,MAAM,EAAE,CAAC;gBAChB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;YAlCE,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC;YACjD,IAAI,CAAC,iBAAiB,GAAG,IAAI,iBAAiB,EAAE,CAAC;YACjD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;YAC7C,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;QA+BL,6BAAC;IAAD,CAhDA,AAgDC,IAAA;IAED,OAAS,sBAAsB,CAAC","file":"controller/grid/AbstractGridController.js","sourcesContent":["/**\r\n * Created by zhida.wen on 2016/10/8.\r\n */\r\n\r\nimport {app} from \"app/config\";\r\nimport GridProperty = require(\"./GridProperty\");\r\nimport PersonDto = require(\"./PersonDto\");\r\nimport \"../../directive/grid/qsGrid\";\r\nimport GridCommonService = require('app/js/service/GridCommonService');\r\nabstract class AbstractGridController {\r\n\r\n    gridProperty: GridProperty;\r\n\r\n    gridCommonService: GridCommonService;\r\n    gridJsonRepository: any;\r\n\r\n    items: PersonDto[] = [];\r\n\r\n    //gridSearchJsonUrl: string = '../../../data/gridSearch.json';\r\n    //gridCrudJsonUrl: string = '../../../data/gridCrud.json';\r\n\r\n    constructor(GridJsonRepository: any, SweetAlert: any) {\r\n        this.gridProperty = new GridProperty(SweetAlert);\r\n        this.gridCommonService = new GridCommonService();\r\n        this.gridJsonRepository = GridJsonRepository;\r\n        this.init();\r\n    }\r\n\r\n    /*\r\n     过滤数据并显示\r\n     */\r\n    search:() => void = function () {\r\n        this.gridProperty.filteredItems = this.items;\r\n        this.gridCommonService.orderAndDisplay(this.gridProperty);\r\n    };\r\n\r\n    // 加载数据并刷新视图\r\n    init:() => void = function() {\r\n        let vm =this;\r\n        this.gridJsonRepository.getAll().then(function(items) {\r\n            angular.forEach(items, function (item, index) {\r\n                let person = new PersonDto();\r\n                person.id = item.id;\r\n                person.name = item.name;\r\n                person.age = item.age;\r\n                person.email = item.email;\r\n                person.dept = item.dept;\r\n                person.telephone = item.telephone;\r\n\r\n                person.gridIndex = index;\r\n                person.itemSelected = false;\r\n\r\n                vm.items.push(person);\r\n            })\r\n            vm.search();\r\n        });\r\n    };\r\n}\r\n\r\nexport = AbstractGridController;"],"sourceRoot":"/source/"}